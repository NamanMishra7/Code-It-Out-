#include <bits/stdc++.h>
using namespace std;

int binarySearch(int arr[], int l, int r, int x) 
{ 
    if (r >= l) { 
        int mid = l + (r - l) / 2; 
        if (arr[mid] == x) 
            return mid; 
        if (arr[mid] > x) 
            return binarySearch(arr, l, mid - 1, x); 
        return binarySearch(arr, mid + 1, r, x); 
    } 
    return -1; 
}

int main()
{
	#ifndef ONLINE_JUDGE
	freopen("input.txt", "r", stdin);
	freopen("output.txt", "w", stdout);
	#endif
	ios_base::sync_with_stdio(0);
	cin.tie(0);
	cout.tie(0);
	int n1, n2, n3, _sz, cntr = -1;
	cin >> n1 >> n2 >> n3;
	_sz = max(max(n1, n2), n3);
	int arr1[n1], arr2[n2], arr3[n3], ans[_sz], mask2[n2] = {0};
	for (int i = 0; i < n1; i++)
		cin >> arr1[i];
	for (int i = 0; i < n2; i++)
		cin >> arr2[i];
	for (int i = 0; i < n3; i++)
		cin >> arr3[i];
	for (int i = 0; i < n1; i++) {
		int p = binarySearch(arr2, 0, n2-1, arr1[i]);
		int q = binarySearch(arr3, 0, n3-1, arr1[i]);
		if (p != -1) {
			ans[++cntr] = arr1[i];
			mask2[p] = 1;
		}
		else if (q != -1) {
			ans[++cntr] = arr1[i];
		}
	}
	for (int i = 0; i < n2; i++) {
		if (mask2[i] == 0) {
			int p = binarySearch(arr3, 0, n3-1, arr2[i]);
			if (p != -1)
				ans[++cntr] = arr2[i];
		}
	}
	sort(ans, ans+cntr+1);
	cout << cntr+1 << "\n";
	for (int i = 0; i <= cntr; i++) {
		cout << ans[i] << "\n";
	}
	return 0;
}
